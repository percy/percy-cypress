describe('@percy/cypress', function() {

  describe('with local app', function() {

    beforeEach(function() {
      // Make sure we start each test with a clean slate.
      cy.clearLocalStorage()
      // Load the app and verify that it is in fact being loaded correctly.
      cy.visit('http://localhost:8000')
      cy.get('.todoapp').should('exist')
    })

    it('snapshots with autogenerated name', function() {
      cy.percySnapshot()
    })

    it('snapshots with provided name', function() {
      cy.percySnapshot('Explicitly given name')
    })

    it('snapshots with provided name and widths', function() {
      cy.percySnapshot('Snapshot with widths', { widths: [768, 992, 1200] })
    })

    it('snapshots with provided name and percyCSS', function() {
      cy.percySnapshot('Snapshot with percyCSS', {
        percyCSS: `body { background-color: purple; }`
      })
    })

    it('snapshots with provided name and minHeight', function() {
      cy.get('.todoapp').should('exist')
      cy.percySnapshot('Snapshot with minHeight', { minHeight: 2000 })
    })

    it('correctly takes multiple snapshots in one test', function() {
      // Enter a new todo.
      cy.get('.new-todo').type('A thing to accomplish {enter}')
      cy.get('.todo-count').should('contain', '1 item left')
      cy.percySnapshot('Multiple snapshots #1 -- 1 todo left')

      // Click it off -- it should be marked as completed.
      cy.get('.toggle').click()
      cy.get('.todo-count').should('contain', '0 items left')
      cy.percySnapshot('Multiple snapshots #2 -- 1 checked-off todo')
    })

    it('snapshots part of a page', function() {
      cy.percySnapshot('With a passed domTransformation function', {
        domTransformation: documentClone => scope(documentClone, 'footer.info')
      })
    })
  })

  describe('with live sites', function() {
    // The tests in this block require setting '"chromeWebSecurity": false' in cypress.json.
    // For details, see: https://docs.cypress.io/guides/guides/web-security.html#Disabling-Web-Security

    it('snapshots a website with HTTP', function() {
      cy.visit('http://example.com/')
      cy.percySnapshot('http://example.com/')
    })

    it('snapshots a website with HTTPS, strict CSP, CORS and HSTS setup', function() {
      cy.visit('https://sdk-test.percy.dev')
      cy.percySnapshot('https://sdk-test.percy.dev')
    })
  })
})


function scope(documentClone, selector) {
  let element = documentClone.querySelector(selector);
  documentClone.querySelector('body').innerHTML = element.outerHTML;

  return documentClone;
}
